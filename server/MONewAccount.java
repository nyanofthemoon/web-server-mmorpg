import javax.servlet.*;import javax.servlet.http.*;import java.lang.String;import java.net.*;import java.io.*;import java.util.Date;import com.apple.mrj.MRJFileUtils;import com.apple.mrj.MRJOSType;public class MONewAccount extends HttpServlet{   public void doPost (HttpServletRequest nareq, HttpServletResponse nares)    throws ServletException, IOException{String newusername = nareq.getParameter("username").toLowerCase();String newpassword = nareq.getParameter("pass");String myrepassword = nareq.getParameter("passre");String myclue = nareq.getParameter("clue");String myname = nareq.getParameter("name");String myemail = nareq.getParameter("email");String myadress = nareq.getParameter("adress");String myunit = nareq.getParameter("unit");String mycountry = nareq.getParameter("country");String mystate = nareq.getParameter("state");String mycity = nareq.getParameter("city");String myzip = nareq.getParameter("zip");String myhomea = nareq.getParameter("homea");String myhomeb = nareq.getParameter("homeb");String myhomec = nareq.getParameter("homec");String myworka = nareq.getParameter("worka");String myworkb = nareq.getParameter("workb");String myworkc = nareq.getParameter("workc");String myworkd = nareq.getParameter("workd");String myagreement = nareq.getParameter("agreement");String mytrue = nareq.getParameter("true");					if (newusername.length() < 3 || newpassword.length() < 3 || myrepassword.length() < 3 || myname.length() < 5 || myemail.length() < 5 || mycountry.length() < 2 || mystate.length() < 2 || myagreement == null || mytrue == null ) {nares.sendRedirect("http://localhost/newaccountmissingvalues.html");return;} else {}// Possible Path Hole Disabledchar[] usnarray = new char[newusername.length()];char[] pwdarray = new char[newpassword.length()];                  newusername.getChars( 0, newusername.length(), usnarray, 0);newpassword.getChars( 0, newpassword.length(), pwdarray, 0);for ( int sizeun = 0; sizeun < newusername.length(); sizeun++ ) {if (Character.isLetterOrDigit(usnarray[sizeun]) == false) { nares.sendRedirect("http://localhost/newaccountinvalidunvalues.html"); return; } else {}}for ( int sizeup = 0; sizeup < newpassword.length(); sizeup++ ) {if (Character.isLetterOrDigit(pwdarray[sizeup]) == false) { nares.sendRedirect("http://localhost/newaccountinvalidpwvalues.html"); return; } else {}}// Checks for existing newusernameString newfile = "data/players/" + newusername;try { BufferedReader bz = new BufferedReader(new FileReader(newfile));bz.close();nares.sendRedirect("http://localhost/newaccountusernametaken.html");return;}catch ( IOException e ) { }// Verifies that newpassword is not equal to newusernameif (newpassword.equals(newusername)) {nares.sendRedirect("http://localhost/newaccountsamepwun.html");return; } else {}								   // Verifies that newpassword is equal to myrepasswordif ((myrepassword.toLowerCase()).equals(newpassword)) {} else {nares.sendRedirect("http://localhost/newaccountnotsamepwvalues.html");return;}if ( myunit.length() < 1 ) { } else { myunit = " Unit/App.: " + myunit; }if ( myzip.length() > 1 ) { myzip = " Zip/Postal Code: " + myzip; } else {}if ( mycity.length() > 1 && myadress.length() > 1) { myadress = ", " + myadress; } else {}if ( myadress.length() > 1 || myunit.length() > 1 && myzip.length() > 1) { myzip = ", " + myzip; } else {}if ( myhomea.length() < 1 ) { myhomeb = ""; myhomec = ""; } else { myhomea = " Home Phone: (" + myhomea; }if ( myhomeb.length() < 1 ) { myhomea = ""; myhomec = ""; } else { myhomeb = ") " + myhomeb; }if ( myhomec.length() < 1 ) { myhomea = ""; myhomeb = ""; } else { myhomec = "-" + myhomec; }if ( myworka.length() < 1 ) { myworkb = ""; myworkc = ""; myworkd = ""; } else { myworka = " Work Phone: (" + myworka + ")"; }if ( myworkb.length() < 1 ) { myworka = ""; myworkc = ""; myworkd = ""; } else { myworkb = " " + myworkb; }if ( myworkc.length() < 1 ) { myworka = ""; myworkb = ""; myworkd = ""; } else { myworkc = "-" + myworkc; }if ( myworkd.length() < 1 ) { } else { myworkd = " #" + myworkd; }MRJFileUtils.setDefaultFileCreator(new MRJOSType("ttxt"));MRJFileUtils.setDefaultFileType(new MRJOSType("TEXT"));Date newactdte = new Date();int newactmon = newactdte.getMonth();int newactday = newactdte.getDate();int newactyear = newactdte.getYear();String nufile = "data/players/" + newusername;PrintWriter nufoutz = new PrintWriter( new FileWriter(nufile) );nufoutz.println( newpassword );nufoutz.println( myclue );nufoutz.println( "beta" );nufoutz.println( newactday + "*" + newactmon + "*" + newactyear );nufoutz.println( "10" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( "-= Empty Character Slot =-" );nufoutz.println( myname );nufoutz.println( myemail );nufoutz.println( mycountry );nufoutz.println( mystate );nufoutz.println( mycity + myadress + myunit + myzip + myhomea + myhomeb + myhomec + myworka + myworkb + myworkc + myworkd );nufoutz.println( "<insert referrer here>" );nufoutz.close();nares.sendRedirect("http://localhost/accountcreated.html");return;}// DoGet() Method Errorpublic void doGet(HttpServletRequest gnareq, HttpServletResponse gnares)throws IOException, ServletException{ gnares.sendRedirect("http://localhost/inexistent.html"); return; }}