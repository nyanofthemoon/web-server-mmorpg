import java.io.*;import javax.servlet.*;import javax.servlet.http.*;import java.lang.String;import java.util.StringTokenizer;import java.util.Date;public class MOSaveCH extends HttpServlet { public void doPost(HttpServletRequest mosvr, HttpServletResponse mosvs) throws ServletException, IOException {String AppletLegacyArray[] = new String[ 5000 ];int AppletLegacySize = 0;String RawAppletLegacy;try {ObjectInputStream issmosave = new ObjectInputStream(mosvr.getInputStream());RawAppletLegacy = (String)issmosave.readObject();issmosave.close();}catch (Exception MOSaveRdStrExc) { LogError( MOSaveRdStrExc.toString(), "MOSaveCH-Couldn't Read From Player's Applet" ); return; }if (RawAppletLegacy.equals("null") || RawAppletLegacy.equals("") || RawAppletLegacy.equals("index.ssi")) { return; } else {}                      StringTokenizer RawAppletLegacyTkn = new StringTokenizer(RawAppletLegacy,"%",false);while (RawAppletLegacyTkn.hasMoreTokens()) {AppletLegacyArray[AppletLegacySize] = RawAppletLegacyTkn.nextToken();AppletLegacySize = AppletLegacySize + 1;}AppletLegacySize = 0;int MOSaveStatusSize = 0;int MOSaveStatsSize = 0;int MOSaveMoneySize = 0;int MOSaveCocheSize = 0;PrintWriter mosaveStatusFileopn = new PrintWriter( new FileWriter("data/characters/" + AppletLegacyArray[0] + "/status") );while (MOSaveStatusSize < 22) {mosaveStatusFileopn.println( AppletLegacyArray[AppletLegacySize] );MOSaveStatusSize = MOSaveStatusSize + 1;AppletLegacySize = AppletLegacySize + 1;}mosaveStatusFileopn.close();PrintWriter mosaveStatsFileopn = new PrintWriter( new FileWriter("data/characters/" + AppletLegacyArray[0] + "/stats") );while (MOSaveStatsSize < 69) {mosaveStatsFileopn.println( AppletLegacyArray[AppletLegacySize] );MOSaveStatsSize = MOSaveStatsSize + 1;AppletLegacySize = AppletLegacySize + 1;}mosaveStatsFileopn.close();PrintWriter mosaveMoneyFileopn = new PrintWriter( new FileWriter("data/characters/" + AppletLegacyArray[0] + "/money") );while (MOSaveMoneySize < 26) {mosaveMoneyFileopn.println( AppletLegacyArray[AppletLegacySize] );MOSaveMoneySize = MOSaveMoneySize + 1;AppletLegacySize = AppletLegacySize + 1;}mosaveMoneyFileopn.close();PrintWriter mosaveCocheFileopn = new PrintWriter( new FileWriter("data/characters/" + AppletLegacyArray[0] + "/coches") );while (MOSaveCocheSize < 12) {mosaveCocheFileopn.println( AppletLegacyArray[AppletLegacySize] );MOSaveCocheSize = MOSaveCocheSize + 1;AppletLegacySize = AppletLegacySize + 1;}mosaveCocheFileopn.close();return;}public void LogError( String plrerror, String myscrname ) throws IOException {String errorslog = "data/logs/Errors/";Date errosdte = new Date();int errmon = errosdte.getMonth();int errday = errosdte.getDate();int erryear = errosdte.getYear();int errhour = errosdte.getHours();int errmin = errosdte.getMinutes();int errsec = errosdte.getSeconds();errorslog = errorslog + erryear + "-" + errmon + "-" + errday + " at " + errhour + "H " + errmin + "M " + errsec + "S";PrintWriter errlogslog = new PrintWriter( new FileWriter(errorslog) );errlogslog.println( "<html><head></head><body bgcolor=black text=red><font size=-2 face=Verdana><center><br>Script Name: " + myscrname + "<br>Error: " + plrerror + "</font></center></body></html>");errlogslog.close();}// DoGet() Method Errorpublic void doGet(HttpServletRequest mosavebreq, HttpServletResponse mosavebres)throws IOException, ServletException{ mosavebres.sendRedirect("http://localhost/inexistent.html"); return; }}