import java.io.*;import javax.servlet.*;import javax.servlet.http.*;import java.lang.String;import java.util.Date;import java.util.StringTokenizer;public class MOLogin extends HttpServlet{   public void doPost (HttpServletRequest logreq, HttpServletResponse logres)    throws ServletException, IOException{String myusername = logreq.getParameter("username");String mypassword = logreq.getParameter("password");String myactivation = logreq.getParameter("activation");String mybrowser = logreq.getParameter("mybrowser");String myplatform = logreq.getParameter("myplatform");String loginformat = logreq.getParameter("format");String myrelogin = "";if (loginformat.equals("default")) {String relchoosecookie = "MOLogin";Cookie[] relmochoptcookiejar = logreq.getCookies();if ( relmochoptcookiejar != null ) { } else { logres.sendRedirect("http://localhost/login.html"); return; }myusername = GetLCookie( relchoosecookie, relmochoptcookiejar );myrelogin = "relogin98723jnnksdlshufdHUGvd763egjhbdsyy6783478yUYYYYGFwtyfWWFETFWE66YYWEY";} else {}if (myusername.equals("index.ssi") || mybrowser.equals("") || mybrowser.equals("null") || myplatform.equals("null") || myplatform.equals("")) { logres.sendRedirect("http://localhost/loginerror.html"); return; } else { }// Read the file into rawfileString rawfilearray[] = new String[ 37 ];int rawarraysize = 0;String file = "data/players/" + myusername;String nextLine;try { BufferedReader br = new BufferedReader(new FileReader(file));	  StringBuffer rawfile = new StringBuffer(); 	while ((nextLine = br.readLine()) != null) {		rawfilearray[rawarraysize] = nextLine.toString();		rawarraysize++;										       }    br.close();	}	  catch ( IOException e ) { LogError( e.toString(), "MOLogin-Read Player File" ); logres.sendRedirect("http://localhost/loginerror.html"); return; }										   if (mypassword.equals(rawfilearray[0]) || myrelogin.equals("relogin98723jnnksdlshufdHUGvd763egjhbdsyy6783478yUYYYYGFwtyfWWFETFWE66YYWEY")) {Date newlogtoday = new Date();int hour = newlogtoday.getHours();int min = newlogtoday.getMinutes();int sec = newlogtoday.getSeconds();int mon = newlogtoday.getMonth();int day = newlogtoday.getDate();int year = newlogtoday.getYear();String rawdate[] = new String[ 7 ];int rawdatesize = 0;String rawdatefile = "data/motime/" + mon + day + year;String rawdatenextLine;try { BufferedReader dte = new BufferedReader(new FileReader(rawdatefile));	  StringBuffer daterawfilerd = new StringBuffer(); 	while ((rawdatenextLine = dte.readLine()) != null) {		rawdate[rawdatesize] = rawdatenextLine.toString();		rawdatesize++;										       }    dte.close();if (myrelogin.equals("relogin98723jnnksdlshufdHUGvd763egjhbdsyy6783478yUYYYYGFwtyfWWFETFWE66YYWEY")) {} else {rawfilearray[3] = day + "*" + mon + "*" + year;PrintWriter updlastlogin = new PrintWriter( new FileWriter(file) );updlastlogin.println( rawfilearray[0] );updlastlogin.println( rawfilearray[1] );updlastlogin.println( rawfilearray[2] );updlastlogin.println( rawfilearray[3] );updlastlogin.println( rawfilearray[4] );updlastlogin.println( rawfilearray[5] );updlastlogin.println( rawfilearray[6] );updlastlogin.println( rawfilearray[7] );updlastlogin.println( rawfilearray[8] );updlastlogin.println( rawfilearray[9] );updlastlogin.println( rawfilearray[10] );updlastlogin.println( rawfilearray[11] );updlastlogin.println( rawfilearray[12] );updlastlogin.println( rawfilearray[13] );updlastlogin.println( rawfilearray[14] );updlastlogin.println( rawfilearray[15] );updlastlogin.println( rawfilearray[16] );updlastlogin.println( rawfilearray[17] );updlastlogin.println( rawfilearray[18] );updlastlogin.println( rawfilearray[19] );updlastlogin.println( rawfilearray[20] );updlastlogin.println( rawfilearray[21] );updlastlogin.println( rawfilearray[22] );updlastlogin.println( rawfilearray[23] );updlastlogin.println( rawfilearray[24] );updlastlogin.println( rawfilearray[25] );updlastlogin.println( rawfilearray[26] );updlastlogin.println( rawfilearray[27] );updlastlogin.println( rawfilearray[28] );updlastlogin.println( rawfilearray[29] );updlastlogin.println( rawfilearray[30] );updlastlogin.println( rawfilearray[31] );updlastlogin.println( rawfilearray[32] );updlastlogin.println( rawfilearray[33] );updlastlogin.println( rawfilearray[34] );updlastlogin.println( rawfilearray[35] );updlastlogin.close();}		}catch ( IOException e ) { LogError( e.toString(), "MOLogin-Update Player's Last Logged On in File" ); throw new IOException( "<html><head><title></title></head><body bgcolor=\"#000000\" text=\"#000000\" alink=\"#ce9c00\" vlink=\"#ce9c00\" link=\"#dcd816\"><div align=\"center\"><br><img src=\"http://localhost/Images/error.gif\" width=\"36\" height=\"42\" border=\"0\"><br><br><br><font size=\"-2\" face=\"Verdana\" color=\"#FFFFFF\">Error 202. " + mon + day + year + "<br><br>Please report this error to us right away.<br><br><b>Specify your configuration and your username</b>.</font></div></body></html>" ); }int currentcharacter = 5;String choose;String view;String hist;String nuw;String del;logres.addCookie(new Cookie("MOLogin", myusername));int randominterface = 1 + (int) ( Math.random() * 2 );if (randominterface == 1) { choose = "optbarchoose.gif"; view = "optbarview.gif"; hist = "optbarhistory.gif"; nuw = "optbarnewchar.gif"; del = "optbardelchar.gif";} else { choose = "optbarchooseb.gif"; view = "optbarviewb.gif"; hist = "optbarhistoryb.gif"; nuw = "optbarnewcharb.gif"; del = "optbardelcharb.gif"; }ServletOutputStream loginout = logres.getOutputStream();loginout.println("<html><head><title>Character Options Screen</title></head>");loginout.println("<body background=\"http://localhost/Images/mobkgnd.jpg\" text=\"black\" link=\"yellow\" alink=\"#ffcc00\" vlink=\"#ffcc00\" leftmargin=\"0\" marginwidth=\"0\" topmargin=\"0\" marginheight=\"0\" oncontextmenu=\"return false;\">");loginout.println("<noscript><form action=\"http://localhost/waiting.html\" method=\"post\" name=\"MOCharOpts\"></noscript>");loginout.println("<div align=\"center\"><br><form action=\"http://localhost/servlet/MOCharOpts\" method=\"post\" name=\"MOCharOpts\" target=\"_self\"><input type=\"hidden\" value=\"\" name=\"format\"><input type=\"hidden\" value=\"" + mybrowser + "\" name=\"mybrowser\"><input type=\"hidden\" value=\"" + myplatform + "\" name=\"myplatform\">");if ( rawfilearray[2].equals("unregistered") ) { loginout.println("<a href=\"http://localhost/register.html\"><img src=\"http://localhost/Images/registermo.gif\" width=\"307\" height=\"65\" border=\"0\"></a><br>"); } else { }String memotdrawfilearray[] = new String[ 5 ];String motdcheckfile = "data/motd";int memotdrawarraysize = 0;String motdnextLine;try { BufferedReader motdcheck = new BufferedReader(new FileReader(motdcheckfile));while ((motdnextLine = motdcheck.readLine()) != null) {		memotdrawfilearray[memotdrawarraysize] = motdnextLine.toString();		memotdrawarraysize++;										       }motdcheck.close();loginout.println("<table border=\"0\" cellpadding=\"5\" cellspacing=\"1\" width=\"60%\"><tr><td bgcolor=\"black\"><font face=\"Verdana\" size=\"-2\" color=\"white\"><center>News</center></font></td></tr><tr><td bgcolor=\"#111111\">");loginout.println("<font face=\"Verdana\" size=\"-2\" color=\"white\">" + memotdrawfilearray[0] + "</font></td></tr></table><br>");}catch ( IOException e ) { LogError( e.toString(), "MOLogin-Read MOTime File" ); }loginout.println("<applet code=\"MOTime.class\" width=\"375\" height=\"17\" codebase=\"http://localhost/moapplets/" + mybrowser + "\"><param name=\"year\" value=\"" + rawdate[0] + "\"><param name=\"day\" value=\"" + rawdate[5] + "\"><param name=\"hour\" value=\"" + hour + "\"><param name=\"minute\" value=\"" + min + "\"><param name=\"second\" value=\"" + sec + "\"></applet><br><a href=\"javascript:document.MOCharOpts.submit()\" onClick=\"document.MOCharOpts.action.value='choose'\"><image src=\"http://localhost/Images/" + choose + "\" border=\"0\"></a><a href=\"javascript:document.MOCharOpts.submit()\" onClick=\"document.MOCharOpts.action.value='view'\"><image src=\"http://localhost/Images/" + view + "\" border=\"0\"></a><a href=\"javascript:document.MOCharOpts.submit()\" onClick=\"document.MOCharOpts.action.value='hist'\"><image src=\"http://localhost/Images/" + hist + "\" border=\"0\"></a><a href=\"javascript:document.MOCharOpts.submit()\" onClick=\"document.MOCharOpts.action.value='new'\"><image src=\"http://localhost/Images/" + nuw + "\" border=\"0\"></a><a href=\"javascript:document.MOCharOpts.submit()\" onClick=\"document.MOCharOpts.action.value='del'\"><image src=\"http://localhost/Images/" + del + "\" border=\"0\"></a>");loginout.println("<input type=\"hidden\" value=\"\" name=\"action\"><br><table border=\"0\" cellpadding=\"1\" cellspacing=\"1\">");boolean emptycharactelogrequality = rawfilearray[currentcharacter].equals("-= Empty Character Slot =-");int nextemptycharacter = 30;String titleimage;String raceimage;String racegender;String resimage;String magimage;String morimage;String characterfilestatus;String characterfilestats;String[] charfilestatuslog = new String [60];String[] charfilestatslog = new String [60];float logmaxres = 0;float logcurrentres = 0;float logcurrentmag = 0;float logmaxmag = 0;float logcurrentmor = 0;float logmaxmor = 0;while (currentcharacter < 30) {if (emptycharactelogrequality == false) {characterfilestatus = "data/characters/" + rawfilearray[currentcharacter] + "/status";charfilestatuslog = ReadLogFile( characterfilestatus );characterfilestats = "data/characters/" + rawfilearray[currentcharacter] + "/stats";charfilestatslog = ReadLogFile( characterfilestats );// GET FILE STUFF HEREif (charfilestatuslog[7].equals("Outsider")) { titleimage = "outsider.gif";} else if (charfilestatuslog[7].equals("Peasant")) { titleimage = "peasant.gif";} else if (charfilestatuslog[7].equals("Citizen")) { titleimage = "citizen.gif";} else if (charfilestatuslog[7].equals("Beginner")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s1.gif"; } else { titleimage = "1.gif"; }} else if (charfilestatuslog[7].equals("Apprentice")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s2.gif"; } else { titleimage = "2.gif"; }} else if (charfilestatuslog[7].equals("Novice")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s3.gif"; } else { titleimage = "3.gif"; }} else if (charfilestatuslog[7].equals("Traveller")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s4.gif"; } else { titleimage = "4.gif"; }} else if (charfilestatuslog[7].equals("Explorer")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s5.gif"; } else { titleimage = "5.gif"; }} else if (charfilestatuslog[7].equals("Adventurer")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s6.gif"; } else { titleimage = "6.gif"; }} else if (charfilestatuslog[7].equals("Professional")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s7.gif"; } else { titleimage = "7.gif"; }} else if (charfilestatuslog[7].equals("Specialist")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s8.gif"; } else { titleimage = "8.gif"; }} else if (charfilestatuslog[7].equals("Expert")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s9.gif"; } else { titleimage = "9.gif"; }} else if (charfilestatuslog[7].equals("Champion")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s10.gif"; } else { titleimage = "10.gif"; }} else if (charfilestatuslog[7].equals("Master")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s11.gif"; } else { titleimage = "11.gif"; }} else if (charfilestatuslog[7].equals("Prodigy")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s12.gif"; } else { titleimage = "12.gif"; }} else if (charfilestatuslog[7].equals("Idol")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s13.gif"; } else { titleimage = "13.gif"; }} else if (charfilestatuslog[7].equals("Hero")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s14.gif"; } else { titleimage = "14.gif"; }} else if (charfilestatuslog[7].equals("Legend")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "s15.gif"; } else if (charfilestatuslog[8].equals("Neo Summoner") || charfilestatuslog[8].equals("Neo Guardian") || charfilestatuslog[8].equals("Neo Nemesis") || charfilestatuslog[8].equals("Neo Alchemist") || charfilestatuslog[8].equals("Neo Elementalist") || charfilestatuslog[8].equals("Neo Archmagus") || charfilestatuslog[8].equals("Neo Magus")  || charfilestatuslog[8].equals("Light Magus")  || charfilestatuslog[8].equals("Dark Magus")) { titleimage = "s15a.gif"; } else { titleimage = "15.gif"; }} else if (charfilestatuslog[7].equals("Staff")) { if (charfilestatuslog[8].equals("Magus") || charfilestatuslog[8].equals("Archmagus") || charfilestatuslog[8].equals("Alchemist") || charfilestatuslog[8].equals("Nemesis") || charfilestatuslog[8].equals("Guardian") || charfilestatuslog[8].equals("Summoner") || charfilestatuslog[8].equals("Elementalist")) { titleimage = "sstaff.gif"; } else { titleimage = "astaff.gif"; }} else { titleimage = "trial.gif"; }logcurrentres = Integer.parseInt(charfilestatslog[6]);logmaxres = Integer.parseInt(charfilestatslog[8]);logcurrentres = (logcurrentres / logmaxres) * 100;logcurrentmag = Integer.parseInt(charfilestatslog[15]);logmaxmag = Integer.parseInt(charfilestatslog[17]);logcurrentmag = (logcurrentmag / logmaxmag) * 100;logcurrentmor = Integer.parseInt(charfilestatslog[39]);logmaxmor = Integer.parseInt(charfilestatslog[41]);logcurrentmor = (logcurrentmor / logmaxmor) * 100;if ( logcurrentres == 100 ) { resimage = "resistance10.gif";} else if ( logcurrentres >= 90 ) { resimage = "resistance09.gif";} else if ( logcurrentres >= 80 ) { resimage = "resistance08.gif";} else if ( logcurrentres >= 70 ) { resimage = "resistance07.gif";} else if ( logcurrentres >= 60 ) { resimage = "resistance06.gif";} else if ( logcurrentres >= 50 ) { resimage = "resistance05.gif";} else if ( logcurrentres >= 40 ) { resimage = "resistance04.gif";} else if ( logcurrentres >= 30 ) { resimage = "resistance03.gif";} else if ( logcurrentres >= 20 ) { resimage = "resistance02.gif";} else { resimage = "resistance01.gif"; }if ( logcurrentmag == 100 ) { magimage = "magic10.gif";} else if ( logcurrentmag >= 90 ) { magimage = "magic09.gif";} else if ( logcurrentmag >= 80 ) { magimage = "magic08.gif";} else if ( logcurrentmag >= 70 ) { magimage = "magic07.gif";} else if ( logcurrentmag >= 60 ) { magimage = "magic06.gif";} else if ( logcurrentmag >= 50 ) { magimage = "magic05.gif";} else if ( logcurrentmag >= 40 ) { magimage = "magic04.gif";} else if ( logcurrentmag >= 30 ) { magimage = "magic03.gif";} else if ( logcurrentmag >= 20 ) { magimage = "magic02.gif";} else { magimage = "magic01.gif"; }if ( logcurrentmor == 100 ) { morimage = "morale10.gif";} else if ( logcurrentmor >= 90 ) { morimage = "morale09.gif";} else if ( logcurrentmor >= 80 ) { morimage = "morale08.gif";} else if ( logcurrentmor >= 70 ) { morimage = "morale07.gif";} else if ( logcurrentmor >= 60 ) { morimage = "morale06.gif";} else if ( logcurrentmor >= 50 ) { morimage = "morale05.gif";} else if ( logcurrentmor >= 40 ) { morimage = "morale04.gif";} else if ( logcurrentmor >= 30 ) { morimage = "morale03.gif";} else if ( logcurrentmor >= 20 ) { morimage = "morale02.gif";} else { morimage = "morale01.gif"; }if (charfilestatuslog[2].equals("fei hyong")) { charfilestatuslog[2] = "fei";} else if (charfilestatuslog[2].equals("black mantis")) { charfilestatuslog[2] = "black";} else {}loginout.println("<tr height=\"42\"><td><image src=\"http://localhost/Images/loginnewmessage.gif\" border=\"0\"></td><td align=\"right\" width=\"1\" height=\"42\"><input type=\"radio\" value=\"" + rawfilearray[currentcharacter] + "\" name=\"character\"></td>");loginout.println("<td valign=\"center\" background=\"http://localhost/Images/racebkgnd.gif\" width=\"62\" align=\"center\" valign=\"center\"><a href=\"http://localhost/Guide/raceslist.html\" target=\"_blank\"><img src=\"http://localhost/Images/" + charfilestatuslog[2] + charfilestatuslog[3] + ".gif\" border=\"0\" align=\"absmiddle\"></a></td> <td background=\"http://localhost/Images/characternamebkgnd.gif\" width=\"235\" align=\"center\" valign=\"middle\" height=\"42\"><font size=\"-2\" face=\"Verdana\">" + rawfilearray[currentcharacter] + "</font></td>");loginout.println("<td align=\"center\"><image src=\"http://localhost/Images/" + titleimage + "\" border=\"0\"> <image src=\"http://localhost/Images/" + resimage + "\" border=\"0\"> <image src=\"http://localhost/Images/" + magimage + "\" border=\"0\"> <image src=\"http://localhost/Images/" + morimage + "\" border=\"0\"></td>");currentcharacter = currentcharacter + 1;emptycharactelogrequality = rawfilearray[currentcharacter].equals("-= Empty Character Slot =-");} else {currentcharacter = currentcharacter + 1;emptycharactelogrequality = rawfilearray[currentcharacter].equals("-= Empty Character Slot =-");nextemptycharacter = nextemptycharacter - 1; }}if (nextemptycharacter == 5) {loginout.println("<tr><td align=\"right\" width=\"1\"></td><td background=\"http://localhost/Images/characternamebkgnd.gif\" width=\"235\" height=\"42\" align=\"center\"><font size=\"-2\" face=\"Verdana\">Please Create a Character</font></td></tr>");}loginout.println("</tr></table></form></div></body></html>");loginout.close();return;}		logres.sendRedirect("http://localhost/loginerror.html");return;}// Reads a Filepublic String[] ReadLogFile( String rdlogfilename ) throws IOException {String[] logrdfilearray = new String[ 70 ];int logrdfilearraysize = 0;String logrdfilearraynextLine;try {  BufferedReader logrcfs = new BufferedReader(new FileReader(rdlogfilename));       StringBuffer rawoptsfile = new StringBuffer(); 	while ((logrdfilearraynextLine = logrcfs.readLine()) != null) {		logrdfilearray[logrdfilearraysize] = logrdfilearraynextLine;		logrdfilearraysize++;										                 }    logrcfs.close();}catch ( IOException e ) { LogError( e.toString(), "MOLogin-Read A File Sub" ); throw new IOException( "<html><head><title></title></head><body bgcolor=\"#000000\" text=\"#000000\" alink=\"#ce9c00\" vlink=\"#ce9c00\" link=\"#dcd816\"><div align=\"center\"><br><img src=\"http://localhost/Images/error.gif\" width=\"36\" height=\"42\" border=\"0\"><br><br><br><font size=\"-2\" face=\"Verdana\" color=\"#FFFFFF\">Error 201.<br><br>Please report this error to us right away.<br><br><b>Specify your configuration and your username</b>.</font></div></body></html>" ); }           return ( logrdfilearray );}public void LogError( String plrerror, String myscrname ) throws IOException {String errorslog = "data/logs/Errors/";Date errosdte = new Date();int errmon = errosdte.getMonth();int errday = errosdte.getDate();int erryear = errosdte.getYear();int errhour = errosdte.getHours();int errmin = errosdte.getMinutes();int errsec = errosdte.getSeconds();errorslog = errorslog + erryear + "-" + errmon + "-" + errday + " at " + errhour + "H " + errmin + "M " + errsec + "S";PrintWriter errlogslog = new PrintWriter( new FileWriter(errorslog) );errlogslog.println( "<html><head></head><body bgcolor=black text=red><font size=-2 face=Verdana><center><br>Script Name: " + myscrname + "<br>Error: " + plrerror + "</font></center></body></html>");errlogslog.close();}// Reads a Cookie into String foundcookie;public String GetLCookie( String lcookiename, Cookie[] lmochoptscookiejar ) {String lfoundcookie = "";if ( lmochoptscookiejar != null ) { for ( int lcookiei = 0; lcookiei < lmochoptscookiejar.length; lcookiei++ ) { Cookie lmochoptsCookie = lmochoptscookiejar[lcookiei]; if ( lmochoptsCookie.getName().equals(lcookiename) ) { lfoundcookie = lmochoptsCookie.getValue(); } else { } }                                                                                                                                                             } else { }return (lfoundcookie); }// DoGet() Method Errorpublic void doGet(HttpServletRequest glogreq, HttpServletResponse glogres)throws IOException, ServletException{ glogres.sendRedirect("http://localhost/inexistent.html"); return; }}